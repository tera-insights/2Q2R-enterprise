{"version":3,"sources":["services/ServerSrvc.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAsC1B;IA8BI,oBACY,SAAuC,EACvC,EAAqB;QADrB,cAAS,GAAT,SAAS,CAA8B;QACvC,OAAE,GAAF,EAAE,CAAmB;QA9BzB,aAAQ,GAAQ,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE;YAC3C,OAAO,EAAG,EAAE,MAAM,EAAE,KAAK,EAAK,GAAG,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE;YACnE,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,EAAI,GAAG,EAAE,eAAe,GAAG;YACrD,QAAQ,EAAE,EAAE,MAAM,EAAE,KAAK,EAAK,GAAG,EAAE,mBAAmB,EAAE;YACxD,QAAQ,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,mBAAmB,EAAE;SAC3D,CAAC,CAAC;IA0BA,CAAC;IAxBG,0BAAK,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC;IAC1C,CAAC;IAEM,2BAAM,GAAb,UAAc,GAAsB;QAChC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;IAClD,CAAC;IAEM,2BAAM,GAAb,UAAc,GAAyB;QACnC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;IACnE,CAAC;IAEM,2BAAM,GAAb,UAAc,QAAgB;QAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC;IAC3D,CAAC;IAYL,iBAAC;AAAD,CAnCA,AAmCC;AAVU,kBAAO,GAAG;IACb,WAAW;IACX,IAAI;CACP,CAAC;AA5BO,gCAAU","file":"ServerSrvc.js","sourcesContent":["import 'angular-resource';\n\n/**************\n * Interfaces *\n **************/\n\nexport interface INewServerRequest {\n    appID: string;\n    baseURL: string;\n    keyType: string;\n    publicKey: string;\n    permissions: string;\n}\n\nexport interface IServerUpdateRequest {\n    serverID: string;\n    baseURL: string;\n    keyType: string;\n    publicKey: string;\n    permissions: string;\n}\n\nexport interface IServerInfo {\n    serverID: string;\n    appID: string;\n    baseURL: string;\n    keyType: string;\n    publicKey: string;\n    permissions: string;\n}\n\n/**\n * This service manages physical application servers.\n * \n * @author Sam Claus\n * @version 1/18/17\n * @copyright Tera Insights, LLC\n */\nexport class ServerSrvc {\n    \n    private resource: any = this.$resource('', {}, {\n        'query':  { method: 'GET',    url: '/admin/server', isArray: true },\n        'create': { method: 'POST',   url: '/admin/server', },\n        'update': { method: 'PUT',    url: '/admin/server/:id' },\n        'delete': { method: 'DELETE', url: '/admin/server/:id' }\n    });\n\n    public query(): ng.IPromise<IServerInfo[]> {\n        return this.resource.query().$promise;\n    }\n\n    public create(req: INewServerRequest): ng.IPromise<IServerInfo> {\n        return this.resource.create({}, req).$promise;\n    }\n\n    public update(req: IServerUpdateRequest): ng.IPromise<IServerInfo> {\n        return this.resource.update({ id: '@serverID' }, req).$promise;\n    }\n\n    public delete(serverID: string): ng.IPromise<string> {\n        return this.resource.delete({ id: serverID }).$promise;\n    }\n\n    static $inject = [\n        '$resource',\n        '$q'\n    ];\n\n    constructor(\n        private $resource: ng.resource.IResourceService,\n        private $q: angular.IQService\n    ) {}\n\n}"]}