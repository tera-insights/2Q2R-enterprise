{"version":3,"sources":["services/AdminSrvc.ts"],"names":[],"mappings":";;AAAA,mBAAiB;AACjB,4BAA0B;AA8D1B;IAmCI,mBACY,SAAuC,EACvC,EAAgB;QADhB,cAAS,GAAT,SAAS,CAA8B;QACvC,OAAE,GAAF,EAAE,CAAc;QAnCpB,aAAQ,GAAQ,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE;YAC3C,OAAO,EAAG,EAAE,MAAM,EAAE,KAAK,EAAK,GAAG,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE;YAClE,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,EAAI,GAAG,EAAE,YAAY,EAAE;YACjD,OAAO,EAAG,EAAE,MAAM,EAAE,MAAM,EAAI,GAAG,EAAE,mBAAmB,EAAE;YACxD,QAAQ,EAAE,EAAE,MAAM,EAAE,KAAK,EAAK,GAAG,EAAE,kBAAkB,EAAE;YACvD,QAAQ,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,kBAAkB,EAAE;SAC1D,CAAC,CAAC;IA8BA,CAAC;IA5BG,yBAAK,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC;IAC1C,CAAC;IAEM,0BAAM,GAAb,UAAc,GAAqB;QAC/B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;IAClD,CAAC;IAEM,+BAAW,GAAlB,UAAmB,GAA4B;QAC3C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;IACjD,CAAC;IAEM,0BAAM,GAAb,UAAc,GAAwB;QAClC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;IAClE,CAAC;IAEM,0BAAM,GAAb,UAAc,OAAe;QACzB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC;IAC1D,CAAC;IAYL,gBAAC;AAAD,CAxCA,AAwCC;AAVU,iBAAO,GAAG;IACb,WAAW;IACX,IAAI;CACP,CAAC;AAjCO,8BAAS","file":"AdminSrvc.js","sourcesContent":["import 'angular';\nimport 'angular-resource';\n\n/**************\n * Interfaces *\n **************/\n\nexport interface INewAdminRequest {\n    name: string;\n    email: string;\n    permissions: string[];\n    adminFor: string;\n    iv: string;\n    salt: string;\n    publicKey: string;\n    signingPublicKey: string;\n    signature: string;\n}\n\nexport interface INewAdminReply {\n    requestID: string;\n}\n\nexport interface IAdminUpdateRequest {\n    adminID: string;\n    name: string;\n    email: string;\n    primarySigningKeyID: string;\n    adminFor: string;\n}\n\nexport interface IAdminRoleChangeRequest {\n    adminID: string;\n    role: string;\n    status: string;\n    permissions: string;\n    adminFor: string;\n}\n\nexport interface IAdminDeleteReply {\n    numAffected: number;\n}\n\nexport interface IAdminInfo {\n    activeID: string;\n    status: 'active' | 'inactive';\n    name: string;\n    email: string;\n    permissions: string;\n    role: string;\n    primarySigningKeyID: string;\n    adminFor: string;\n}\n\n/**\n * This service manages admins, with some functions\n * limited to super-admin use.\n * \n * @author Sam Claus\n * @author Alin Dobra\n * @version 1/18/17\n * @copyright Tera Insights, LLC\n */\nexport class AdminSrvc {\n\n    private resource: any = this.$resource('', {}, {\n        'query':  { method: 'GET',    url: '/admin/admin', isArray: true },\n        'create': { method: 'POST',   url: '/admin/new' },\n        'roles':  { method: 'POST',   url: 'admin/admin/roles' },\n        'update': { method: 'PUT',    url: '/admin/admin/:id' },\n        'delete': { method: 'DELETE', url: '/admin/admin/:id' }\n    });\n\n    public query(): ng.IPromise<IAdminInfo[]> {\n        return this.resource.query().$promise;\n    }\n\n    public create(req: INewAdminRequest): ng.IPromise<INewAdminReply> {\n        return this.resource.create({}, req).$promise;\n    }\n\n    public changeRoles(req: IAdminRoleChangeRequest): ng.IPromise<IAdminInfo> {\n        return this.resource.roles({}, req).$promise;\n    }\n\n    public update(req: IAdminUpdateRequest): ng.IPromise<IAdminInfo> {\n        return this.resource.update({ id: '@adminID' }, req).$promise;\n    }\n\n    public delete(adminID: string): ng.IPromise<IAdminDeleteReply> {\n        return this.resource.delete({ id: adminID }).$promise;\n    }\n\n    static $inject = [\n        '$resource',\n        '$q'\n    ];\n\n    constructor(\n        private $resource: ng.resource.IResourceService,\n        private $q: ng.IQService\n    ) {}\n\n}"]}