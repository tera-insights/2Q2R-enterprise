{"version":3,"sources":["controllers/AdminsCtrl.ts"],"names":[],"mappings":";;AACA,sDAAqD;AAErD;IAgEI,oBACY,SAAoB,EACpB,SAAqC,EACrC,QAAmC;QAFnC,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAA4B;QACrC,aAAQ,GAAR,QAAQ,CAA2B;QA7DvC,eAAU,GAAY,KAAK,CAAC;QAC5B,YAAO,GAAa;YACxB,MAAM;YACN,QAAQ;YACR,OAAO;YACP,MAAM;SACT,CAAC;QAKM,eAAU,GAAG;YACjB,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,CAAC;SACV,CAAA;QAiDG,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,YAAY,EAAE,CAAA;IACvB,CAAC;IAjDD,iCAAY,GAAZ;QAAA,iBAQC;QAPG,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,KAAU;gBAChD,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;QACtC,CAAC;IACL,CAAC;IAED,4BAAO,GAAP;QAAA,iBAIC;QAHG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAA,MAAM;YAC9B,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAc,GAAd;IACA,CAAC;IAED,+BAAU,GAAV;QAAA,iBAeC;QAdG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAChB,UAAU,EAAE,2BAAY;YACxB,YAAY,EAAE,MAAM;YACpB,WAAW,EAAE,4BAA4B;YACzC,mBAAmB,EAAE,IAAI;SAC5B,CAAC,CAAC,IAAI,CAAC,UAAC,KAAa;YAClB,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACR,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;YAC/D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5C,CAAC;QACL,CAAC,EAAE;QAEH,CAAC,CAAC,CAAC;IACP,CAAC;IAiBL,iBAAC;AAAD,CAzEA,AAyEC;AAfU,kBAAO,GAAG;IACb,WAAW;IACX,WAAW;IACX,UAAU;CACb,CAAC;AA9DO,gCAAU","file":"AdminsCtrl.js","sourcesContent":["import { AdminSrvc, IAdminInfo } from '../services/AdminSrvc';\nimport { AddAdminCtrl } from './modals/AddAdminCtrl';\n\nexport class AdminsCtrl {\n\n    private admins: IAdminInfo[];\n    private filteredAdmins: any[];\n    private selectedAdmins: any[];\n\n    private filterOpen: boolean = false;\n    private filters: string[] = [\n        \"name\",\n        \"status\",\n        \"email\",\n        \"role\"\n    ];\n    private selectedFilter: string;\n    private filterValue: string;\n\n    private orderBy: string;\n    private pagination = {\n        pageLimit: 11,\n        page: 1\n    }\n\n    applyFilters() {\n        if (this.selectedFilter && this.filterValue) {\n            this.filteredAdmins = this.admins.filter((admin: any): boolean => {\n                return admin[this.selectedFilter].includes(this.filterValue);\n            });\n        } else {\n            this.filteredAdmins = this.admins;\n        }\n    }\n\n    refresh() {\n        this.AdminSrvc.query().then(admins => {\n            this.admins = admins;\n        });\n    }\n\n    deleteSelected() {\n    }\n\n    referAdmin() {\n        this.$mdDialog.show({\n            controller: AddAdminCtrl,\n            controllerAs: 'cMod',\n            templateUrl: 'views/modals/AddAdmin.html',\n            clickOutsideToClose: true\n        }).then((error?: Error) => {\n            if(!error) {\n                this.$mdToast.showSimple('Admin successfully registered!');\n            } else {\n                this.$mdToast.showSimple(error.message);\n            }\n        }, () => {\n            // user canceled, do nothing\n        });\n    }\n\n    static $inject = [\n        'AdminSrvc',\n        '$mdDialog',\n        '$mdToast'\n    ];\n\n    constructor(\n        private AdminSrvc: AdminSrvc,\n        private $mdDialog: ng.material.IDialogService,\n        private $mdToast: ng.material.IToastService\n    ) {\n        this.refresh();\n        this.applyFilters()\n    }\n\n}"]}